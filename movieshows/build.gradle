apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "io.fabric.tools:gradle:$rootProject.ext.fabricGradleVersion"
    }
}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled true
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        ndk {
            abiFilters "armeabi-v7a", "x86", "armeabi", "mips"
        }
        defaultConfig {
            vectorDrawables.useSupportLibrary = true
        }

    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    buildTypes {

        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled true
            zipAlignEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField('String', 'TAG', '"Movie Shows"')
            buildConfigField('String', 'BASE_URL', '"https://api.themoviedb.org/3/"')
            buildConfigField('String', 'API_KEY', properties.getProperty('api_key'))
        }

        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            //
            renderscriptDebuggable true
            pseudoLocalesEnabled true
            zipAlignEnabled false
            buildConfigField('String', 'TAG', '"Movie Shows Debug"')
            buildConfigField('String', 'BASE_URL', '"https://api.themoviedb.org/3/"')
            buildConfigField('String', 'API_KEY', properties.getProperty('api_key'))
        }
    }
    aaptOptions {
        cruncherEnabled false
        useNewCruncher false
    }


    dexOptions {
        dexInProcess false;
        preDexLibraries = true;
        javaMaxHeapSize "4g";
        maxProcessCount 4;
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }

    kapt {
        correctErrorTypes = true
    }

    sourceSets {
        main.java.srcDirs += rootProject.ext.applicationId
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // App's dependencies
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:palette-v7:$rootProject.ext.supportLibraryVersion"

    //architecture components
    // Lifecycle arch
    compile "android.arch.lifecycle:runtime:$rootProject.architectureComponentsVersion"
    compile "android.arch.lifecycle:extensions:$rootProject.architectureComponentsVersion"
    kapt "android.arch.lifecycle:compiler:$rootProject.architectureComponentsVersion"
    // Room
    compile "android.arch.persistence.room:runtime:$rootProject.architectureComponentsVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.architectureComponentsVersion"
    compile "android.arch.persistence.room:rxjava2:$rootProject.architectureComponentsVersion"

    // RecyclerView
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"

    //image loading Glide
    compile "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.ext.glideVersion"

    //Retrofit & RX Java
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.ext.retrofitVersion"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.ext.rxJava2CallAdapterVersion"
    compile "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rootProject.ext.rxbindingVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.squareupVersion"
    compile("com.crashlytics.sdk.android:crashlytics:$rootProject.ext.crashlyticsVersion") {
        transitive = true;
    }
    //Event bus
    compile "org.greenrobot:eventbus:$eventbusVersion"

    //Dagger 2
    compile "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    provided 'javax.annotation:jsr250-api:1.0'

    configurations.all {
        resolutionStrategy.force "com.android.support:support-annotations:$rootProject.ext.supportLibraryVersion"
    }

    //debug & performance
    compile "com.facebook.stetho:stetho:$rootProject.ext.stethoVersion"
    compile "com.facebook.stetho:stetho-okhttp3:$rootProject.ext.stethoVersion"
    debugCompile "com.squareup.leakcanary:leakcanary-android:$rootProject.ext.leakcanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.ext.leakcanaryVersion"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
}